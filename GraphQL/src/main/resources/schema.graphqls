type TokenAnswer {
  token: String
  status: String
}

type MessageAnswer {
  message: String
}

type Event {
  id: ID!
  name: String
  date: String
  description: String
  startTime: String
  endTime: String
}

input EventInput {
  name: String
  date: String
  description: String
  startTime: String
  endTime: String
}

type Query {
  getEvents(token: String!, startDate: String!, endDate: String!): [Event]
}

type Mutation {
  login(email: String!, password: String!): TokenAnswer
  logout(token: String!): MessageAnswer
  createUser(name: String!, email: String!, password: String!): MessageAnswer
  addEvent(token: String!, event: EventInput!, tnListe: [String]!): MessageAnswer
  updateEvent(eventId: ID!, token: String!, event: EventInput!, tnListe: [String]!): MessageAnswer
  deleteEvent(eventId: ID!, token: String!): MessageAnswer
}
